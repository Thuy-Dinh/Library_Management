import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { getALoanApi, updateLoanApi } from "../../../api/loan";
import "./loanEdit.css";

export default function LoanEdit() {
    const { id } = useParams();
    const navigate = useNavigate();

    const [loan, setLoan] = useState(null);
    const [formData, setFormData] = useState({
        DayStart: "",
        DayEnd: "",
        State: "",
        Note: "",
        Payment: 0,
        Method: ""
    });

    useEffect(() => {
        const fetchLoan = async () => {
            try {
                const detail = await getALoanApi(id);
                const data = detail.loanDetail;
                setLoan(data);
                setFormData({
                    DayStart: data.DayStart?.slice(0, 10),
                    DayEnd: data.DayEnd?.slice(0, 10),
                    State: data.State,
                    Note: data.Note || "",
                    // T√°ch ph·∫ßn s·ªë t·ª´ "100000 VND" ho·∫∑c chu·ªói t∆∞∆°ng t·ª±
                    Payment: parseInt(data.Payment) || 0,
                    Method: data.Method,
                });
            } catch (error) {
                console.error("L·ªói khi load d·ªØ li·ªáu ƒë∆°n:", error);
            }
        };
        fetchLoan();
    }, [id]);

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            // Khi c·∫≠p nh·∫≠t, n·∫øu c·∫ßn b·ªï sung l·∫°i ƒë∆°n v·ªã, c√≥ th·ªÉ th·ª±c hi·ªán ·ªü ƒë√¢y
            const payload = {
                ...formData,
                Payment: formData.Payment + " VND"
            };
            await updateLoanApi(id, payload);
            alert("‚úÖ C·∫≠p nh·∫≠t ƒë∆°n th√†nh c√¥ng!");
            navigate(`/admin/order-management/order-detail/${id}`);
        } catch (error) {
            console.error("‚ùå L·ªói c·∫≠p nh·∫≠t:", error);
            alert("ƒê√£ x·∫£y ra l·ªói khi c·∫≠p nh·∫≠t.");
        }
    };

    if (!loan) return <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>;

    return (
        <div className="edit-loan-container">
            <h2>Ch·ªânh s·ª≠a ƒë∆°n m∆∞·ª£n</h2>
            <form onSubmit={handleSubmit} className="edit-loan-form">
                <label>
                    Ng√†y m∆∞·ª£n:
                    <input
                        type="date"
                        name="DayStart"
                        value={formData.DayStart}
                        onChange={handleChange}
                    />
                </label>

                <label>
                    H·∫°n tr·∫£:
                    <input
                        type="date"
                        name="DayEnd"
                        value={formData.DayEnd}
                        onChange={handleChange}
                    />
                </label>

                <label>
                    Tr·∫°ng th√°i:
                    <select
                        name="State"
                        value={formData.State}
                        onChange={handleChange}
                    >
                        <option value="ƒêang m∆∞·ª£n">ƒêang m∆∞·ª£n</option>
                        <option value="ƒê√£ tr·∫£">ƒê√£ tr·∫£</option>
                        <option value="Qu√° h·∫°n">Qu√° h·∫°n</option>
                    </select>
                </label>

                <label>
                    H√¨nh th·ª©c m∆∞·ª£n:
                    <select
                        name="Method"
                        value={formData.Method}
                        onChange={handleChange}
                    >
                        <option value="T·∫°i ch·ªó">T·∫°i ch·ªó</option>
                        <option value="V·ªÅ nh√†">V·ªÅ nh√†</option>
                    </select>
                </label>

                <label>
                    Ti·ªÅn c·ªçc:
                    <div style={{ display: "flex", alignItems: "center" }}>
                        <input
                            type="number"
                            name="Payment"
                            value={formData.Payment}
                            onChange={handleChange}
                            style={{ marginRight: "8px" }}
                        />
                        <span>VNƒê</span>
                    </div>
                </label>

                <label>
                    Ghi ch√∫:
                    <textarea
                        name="Note"
                        value={formData.Note}
                        onChange={handleChange}
                    ></textarea>
                </label>

                <button type="submit">üíæ L∆∞u thay ƒë·ªïi</button>
            </form>
        </div>
    );
}